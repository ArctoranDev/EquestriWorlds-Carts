Carts:
    type: world
    debug: true
    events:
    
        on player clicks block with diamond_spade:
        - if <context.item.unbreakable> && <context.item.durability> <= 60:
            - determine cancelled
        - narrate <context.item>
        
        on player right clicks entity with diamond_spade:
        - if <context.item.unbreakable> && <context.item.durability> <= 60:
            - if <context.entity.entity_type||null> == HORSE:
                - narrate <context.entity>
                - spawn armor_stand <context.entity.location.backward_flat[1.5]> save:horseCart
                - define horseCart <entry[horseCart].spawned_entity>
                - equip <def[horseCart].as_entity> head:<context.item>
                - adjust <def[horseCart].as_entity> "attach_to:<context.entity>|l@0,0,-1.5|true"
            - else if <context.entity.entity_type||null> == ARMOR_STAND:
                - if <context.item.durability> >= 33 && <context.item.durability> <= 48:
                    - if <context.item.display.as_element.split[<&sp>].get[1].to_lowercase> == "light":
                        - define color "<context.item.display.as_element.split[<&sp>].get[1].to_lowercase>_<context.item.display.as_element.split[<&sp>].get[2].to_lowercase>"
                    - else:
                        - define color <context.item.display.as_element.split[<&sp>].get[1].to_lowercase>
                    - equip <context.entity> head:<yaml[vehiclelib].read[<yaml[vehicles].read[JogCart.colors.<def[color]>.model]>
        - determine cancelled
        
        # Vehicle Master Init #
        on server prestart:
        - inject VehicleStartupInit
        on reload scripts:
        - yaml unload id:vehiclelib
        - yaml unload id:vehicles
        - inject VehicleStartupInit
        
VehicleStartupInit:
    type: task
    debug: false
    script:
    # Check for Vehicle Library
    - if <server.has_file[data/entities/vehiclesLib.yml]>:
        
        # Load Existing Vehicle Database
        - yaml load:data/entities/vehiclesLib.yml id:vehiclelib
    
    # Create New One if None Exists
    - else:
        - yaml create id:vehicles
        - yaml savefile:data/entities/vehiclesLib.yml id:vehiclelib